---
title: "Analysis of Ted Talks"
author: "Soumyadipta Das"
format: html
---

# Library

```{r}
library(dplyr)
library(DT)
library(shiny)
library(httr2)
library(jsonlite)
library(plotly)

source('mongodb_helper.R')
source('api.R')
source('helper.R')
```

# Read Transcript Data

```{r}
# df <- mongo_read(table = 'ted_talks_en', db = 'sample_transcript', url = mongo_url)
# df %>% glimpse()
```

# Predict transcript type using AI

```{r}
# nim_output <- data.frame()
# for(i in 1:nrow(df)){
#   text <- paste0(
#   gsub("[\'\"]", " ", df$transcript[i]),
#   "State which option the commenter is most likely to favor (A, B, C, D, E, F, G).
#   State if the comment is 'For', 'Against', or 'Neutral' on option.
#   tate if the strength of the commenter's opinon on a scale from 'Extremely strong', 'Very strong',
#   'Strong', 'Somewhat strong', or 'Mild'.
#   No need any explanation or extra word.
#   Produce the output in json format (Strictly follow the format) like this:\n{\n\'favored_option\': \'\',\n\'option_opinion\':
#   '\',\n\'opinion_strength\': \'\'\n}"
#   )
# 
#   response_nim <- chat_nvidia(
#             text,
#             history = NULL,
#             temp = 0.5,
#             api_key = nv_api_key,
#             model_llm = "meta/llama-3.1-8b-instruct"
#           ) %>%
#         as.data.frame()
# 
#   temp <- (df[i,] %>% select(talk_id, title)) %>%
#     as.data.frame() %>%
#     bind_cols(response_nim)
# 
#   nim_output <- nim_output %>% bind_rows(temp)
# }
# write.csv(nim_output, "nim_output.csv", row.names = FALSE)
```

```{r}
text_output <- read.csv("nim_output.csv", header = TRUE)

favored_df <- data.frame(favored_option = c("A", "B", "C", "D", "E", "F", "G"), favored_option_new = c(1:7))
opinion_df <- data.frame(option_opinion = c('For', 'Neutral', 'Against'), 
                         option_opinion_new = c(1,0,-1))
strength_df <- data.frame(opinion_strength = c('Extremely strong', 'Very strong', 'Strong', 'Somewhat strong', 'Mild'), 
                         opinion_strength_new = c(5:1))

text_output <- text_output |> 
  left_join(favored_df) |>
  left_join(opinion_df) |>
  left_join(strength_df) |>
  mutate(count = 1) 
head(text_output)
```

# Visualization
```{r}
text_output_plot <- text_output %>%
  select(-favored_option, -option_opinion, -opinion_strength) %>%
  group_by(favored_option_new, option_opinion_new, opinion_strength_new) %>%
  summarise(count = sum(count, na.rm = TRUE)) %>%
  ungroup() %>% 
  mutate(opinion_strength_new = as.factor(opinion_strength_new))

fig <- plot_ly(text_output_plot, x = ~favored_option_new, y = ~option_opinion_new, 
               z = ~count, color = ~opinion_strength_new)
fig <- fig %>% add_markers()
fig <- fig %>% layout(scene = list(xaxis = list(title = 'Favored Option'),
                     yaxis = list(title = 'Option Opinion'),
                     zaxis = list(title = 'Count')),
                     title = "Transcript Analysis")

fig

```

